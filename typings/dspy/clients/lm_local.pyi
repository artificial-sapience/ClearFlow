from typing import Any

from _typeshed import Incomplete
from dspy.clients.lm import LM as LM
from dspy.clients.provider import Provider as Provider
from dspy.clients.provider import TrainingJob as TrainingJob
from dspy.clients.utils_finetune import TrainDataFormat as TrainDataFormat
from dspy.clients.utils_finetune import save_data as save_data

logger: Incomplete

class LocalProvider(Provider):
    finetunable: bool
    TrainingJob: Incomplete
    def __init__(self) -> None: ...
    @staticmethod
    def launch(lm: LM, launch_kwargs: dict[str, Any] | None = None): ...
    @staticmethod
    def kill(lm: LM, launch_kwargs: dict[str, Any] | None = None): ...
    @staticmethod
    def finetune(job: TrainingJob, model: str, train_data: list[dict[str, Any]], train_data_format: TrainDataFormat | None, train_kwargs: dict[str, Any] | None = None) -> str: ...

def create_output_dir(model_name, data_path): ...
def train_sft_locally(model_name, train_data, train_kwargs): ...
def get_free_port() -> int: ...
def wait_for_server(base_url: str, timeout: int | None = None) -> None: ...
def encode_sft_example(example, tokenizer, max_seq_length): ...
