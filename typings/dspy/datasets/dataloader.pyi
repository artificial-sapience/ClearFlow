from collections.abc import Mapping

import dspy
import pandas as pd
from dspy.datasets.dataset import Dataset as Dataset

class DataLoader(Dataset):
    def __init__(self) -> None: ...
    def from_huggingface(self, dataset_name: str, *args, input_keys: tuple[str] = (), fields: tuple[str] | None = None, **kwargs) -> Mapping[str, list[dspy.Example]] | list[dspy.Example]: ...
    def from_csv(self, file_path: str, fields: list[str] | None = None, input_keys: tuple[str] = ()) -> list[dspy.Example]: ...
    def from_pandas(self, df: pd.DataFrame, fields: list[str] | None = None, input_keys: tuple[str] = ()) -> list[dspy.Example]: ...
    def from_json(self, file_path: str, fields: list[str] | None = None, input_keys: tuple[str] = ()) -> list[dspy.Example]: ...
    def from_parquet(self, file_path: str, fields: list[str] | None = None, input_keys: tuple[str] = ()) -> list[dspy.Example]: ...
    def from_rm(self, num_samples: int, fields: list[str], input_keys: list[str]) -> list[dspy.Example]: ...
    def sample(self, dataset: list[dspy.Example], n: int, *args, **kwargs) -> list[dspy.Example]: ...
    def train_test_split(self, dataset: list[dspy.Example], train_size: float = 0.75, test_size: float | None = None, random_state: int | None = None) -> Mapping[str, list[dspy.Example]]: ...
