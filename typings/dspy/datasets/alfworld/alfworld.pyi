import types

from _typeshed import Incomplete

def env_worker(inq, outq) -> None: ...

class EnvPool:
    size: Incomplete
    workers: Incomplete
    available: Incomplete
    def __init__(self, size: int = 2) -> None: ...
    def close_all(self) -> None: ...
    def session(self): ...

class _EnvSession:
    pool: Incomplete
    wid: Incomplete
    inq: Incomplete
    outq: Incomplete
    def __init__(self, pool: EnvPool) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type: type[BaseException] | None, exc_val: BaseException | None, exc_tb: types.TracebackType | None) -> None: ...
    def init(self, idx): ...
    def step(self, action): ...

class AlfWorld:
    POOL: Incomplete
    trainset: Incomplete
    devset: Incomplete
    def __init__(self, max_threads: int = 20) -> None: ...
    def __del__(self) -> None: ...
