from _typeshed import Incomplete
from dspy.adapters.chat_adapter import ChatAdapter as ChatAdapter
from dspy.clients.base_lm import BaseLM as BaseLM
from dspy.clients.lm import LM as LM
from dspy.dsp.utils.settings import settings as settings
from dspy.predict.parameter import Parameter as Parameter
from dspy.primitives.module import Module as Module
from dspy.primitives.prediction import Prediction as Prediction
from dspy.signatures.signature import Signature as Signature
from dspy.signatures.signature import ensure_signature as ensure_signature
from dspy.utils.callback import BaseCallback as BaseCallback

logger: Incomplete

class Predict(Module, Parameter):
    stage: Incomplete
    signature: Incomplete
    config: Incomplete
    def __init__(self, signature: str | type[Signature], callbacks: list[BaseCallback] | None = None, **config) -> None: ...
    lm: Incomplete
    traces: Incomplete
    train: Incomplete
    demos: Incomplete
    def reset(self) -> None: ...
    def dump_state(self): ...
    def load_state(self, state: dict) -> Predict: ...
    def __call__(self, *args, **kwargs) -> Prediction: ...
    async def acall(self, *args, **kwargs) -> Prediction: ...
    def forward(self, **kwargs) -> Prediction: ...
    async def aforward(self, **kwargs) -> Prediction: ...
    def update_config(self, **kwargs) -> None: ...
    def get_config(self): ...

def serialize_object(obj): ...
